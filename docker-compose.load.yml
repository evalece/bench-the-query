

version: "3.8"

#####   Container networks #######
networks: 
  bench_q:
    external: false 
services:





#############   Load Test     ######################

  k6_fastAPI_load_test: # for next update, do them sequentially instead of roughly parallelly at concurrent request
    image: grafana/k6
    container_name: fastAPI_load_test
    depends_on:
      - fast_api  # Ensure the 'graphql' service is ready before running test
    volumes:
      - ./load_test/results:/result
      - ./load_test/scripts:/scripts
    networks:
      - bench_q  # Attach to the shared network
    environment:
      - FastAPI_URL= http://fast_api:8000/ 
      - K6_OUT=influxdb=http://influxdb:8086/k6db
      - TYPE=fastapi

    env_file: # debug, user default command for payload;
      - ./.env
  
    command:  run  /scripts/fastAPI_test.js 
 #run --summary-export /results/graphQL_test.json  /scripts/graphQL_test.js 
      

  k6_graphql_load_test: # one K6 for each API server benchmark; sequentially run
    image: grafana/k6
    container_name: graphQL_load_test
    depends_on:
      - graphql
      - k6_fastAPI_load_test # serial test
    networks:
      - bench_q
    volumes:
      - ./load_test/scripts:/scripts
      - ./load_test/results:/results
    environment:
      - GraphQL_URL= http://graphql:4000/ 
      - K6_OUT=influxdb=http://influxdb:8086/k6db
      - TYPE=graphql
    env_file: # debug, user default command for payload;
      - ./.env
    
    command: run /scripts/graphQL_test.js 



############### Visualization of Benchmark from Load Test       ##########################

  influxdb:
    image: influxdb:1.8
    #container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb # Presistance prupose;  V6 directly output to influx; to delete, check docker volume ls then docker volume rm xxx
    networks:
      - bench_q
 
    environment:
      - INFLUXDB_DB=k6db #database name; listenign port: http://influxdb:8086/k6db



  grafana:
    image: grafana/grafana
   #container_name: grafana
    ports:
      - "3000:3000" # post-result dashboard: loacalhost:3000
    networks:
      - bench_q
    depends_on:
      - influxdb # V6 output -> influx DB -> gradana
    environment:
      - GF_SECURITY_ADMIN_USER=admin 
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana





volumes: # For presistance in dashboard and logging
  influxdb_data:
  grafana_data: